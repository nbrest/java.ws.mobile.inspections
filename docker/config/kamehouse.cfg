# -----------------------------------------------------------------------------
# KameHouse config file 
# -----------------------------------------------------------------------------

# This file is used at build and runtime to set some properties/configuration in kamehouse

# -----------------------------------------------------------------------------
# kamehouse-admin
# -----------------------------------------------------------------------------

# Set the properties to send a wol package from the admin page to the media server
#   - mac address of the media server
#   - broadcast address of the network of the media server
MEDIA_SERVER_MAC="8C:04:BA:A6:F2:B1"
MEDIA_SERVER_BROADCAST="192.168.0.255"

# -----------------------------------------------------------------------------
# kamehouse-media
# -----------------------------------------------------------------------------

# Set the playlists path used by media module to render playlists in vlc
#   - Relative to kamehouse user's home
#   - kamehouse-media will load all the playlists in all subfolders of this path
PLAYLISTS_PATH="git/kamehouse-video-playlists/playlists/video-kamehouse"

# -----------------------------------------------------------------------------
# kamehouse-mobile
# -----------------------------------------------------------------------------

# Set the default selected backend on factory defaults of the mobile app
MOBILE_BACKEND_SELECTED_SERVER="Media Server"

# Set the backend kamehouse servers to be connected to by the mobile app
#   - Add all your servers running a kamehouse instance that can be connected to from the mobile app
#   - Remove extra spaces at the end of each line
#   - Format: serverName,url,skipSslCheck,username,password,isLoggedIn,isUrlEditable
#       - serverName: name of the server to be displayed in the mobile app ui
#       - url: http/https url of the server running a kamehouse instance
#       - skipSslCheck: true to skip ssl checks when connecting to the server
#       - username: factory default kamehouse username
#       - password: factory default kamehouse password
#       - isLoggedIn: true if the user is marked as logged in. should be always false here
#       - isUrlEditable: true if the user is allowed to edit the server url in the mobile app
MOBILE_BACKEND_SERVERS="
Media Server,https://192.168.0.109,true,seiya,ikki,false,false
Tennis World Booking,https://kame.nicobrest.com,false,seiya,ikki,false,false
WiFi Hotspot,https://192.168.43.171,true,seiya,ikki,false,true
Dev Apache,https://192.168.0.100:9949,true,seiya,ikki,false,true
Dev Tomcat HTTP,http://192.168.0.100:9980,true,seiya,ikki,false,true
docker-demo.com,https://docker-demo.nicobrest.com,false,seiya,ikki,false,false
kame.com,https://kame.nicobrest.com,false,seiya,ikki,false,false
vm-ubuntu.com,https://vm-ubuntu.nicobrest.com,false,seiya,ikki,false,false
www.nicobrest.com,https://www.nicobrest.com,false,seiya,ikki,false,false
niko-server,https://192.168.0.100,true,seiya,ikki,false,false
niko-server-vm-ubuntu,https://192.168.0.107,true,seiya,ikki,false,false
niko-w,https://192.168.0.100,true,seiya,ikki,false,false
niko-w-vm-ubuntu,https://192.168.0.107,true,seiya,ikki,false,false
raspberrypi,https://192.168.0.129,true,seiya,ikki,false,false
Mock Localhost,https://localhost,true,seiya,ikki,false,false
Custom Server,https://0.0.0.0,true,seiya,ikki,false,true
"

# Set the properties to deploy kamehouse mobile APK to an httpd server
#   - ip/hostname of the server that will host the mobile apk for downloads
#   - sftp username used to upload the apk to the http server
#   - path to upload the apk to in the server that will host the apk
KAMEHOUSE_MOBILE_APP_SERVER="192.168.0.129"
KAMEHOUSE_MOBILE_APP_USER="pi"
KAMEHOUSE_MOBILE_APP_PATH="/var/www/kamehouse-webserver/kame-house-mobile"

# Set the properties to upload kamehouse mobile APK to an android device via sftp
#   - ip/hostname of the android device
#   - sftp port running on the android device
#   - sftp username used to upload the APK
#   - path in the android device's filesystem to upload the APK to
ANDROID_IP="192.168.0.91"
ANDROID_PORT="2222"
ANDROID_SFTP_USER="android"
ANDROID_APK_DEST_PATH="/0/Download"

# -----------------------------------------------------------------------------
# kamehouse-shell
# -----------------------------------------------------------------------------

# Display kamehouse server's list in some help menus
KAMEHOUSE_SERVERS_LIST="(niko-server|niko-server-vm-ubuntu|niko-w|niko-w-vm-ubuntu|raspberrypi)"

# Set the kamehouse server configurations used in scripts like exec in all servers
#   - Add all your servers running a kamehouse instance 
#   - Remove extra spaces at the end of each line
#   - Format: hostname/ip,username,port,isHttps,useDockerDemoCredentials,isDockerContainer,isLinuxHost
#       - hostname/ip: of the server running kamehouse or the ip of the host if it's a docker instance
#       - username: kamehouse username
#       - port: http/https port where kamehouse api's are exposed
#       - isHttps: true if it should connect using https, false for http
#       - useDockerDemoCredentials: true if it should authenticate with docker demo credentials
#       - isDockerContainer: true if the kamehouse instance is running on a docker container
#       - isLinuxHost: true if the kamehouse instance is running on linux. for docker containers set to true
KAMEHOUSE_SERVER_CONFIGS="
niko-server,nbrest,80,false,false,false,false
niko-server,goku,6080,false,true,true,true
niko-server,goku,7080,false,false,true,true
niko-server-vm-ubuntu,nbrest,80,false,false,false,true
niko-server-vm-ubuntu,goku,6080,false,true,true,true
niko-server-vm-ubuntu,goku,7080,false,false,true,true
niko-w,nbrest,80,false,true,false,false
niko-w-vm-ubuntu,nbrest,80,false,true,false,true
raspberrypi,pi,443,true,false,false,true
"

# Set the hostname/ip of the server running the kamehouse docker container instances
#   - Used by docker status script to check the status not only locally but also on the docker server
DOCKER_SERVER="niko-server"

# Set the properties of the host that will be controlled by kamehouse docker containers running on the current server
#   - ip of the host to control
#   - hostname of the host to control
#   - username in the host to ssh with
#   - os of the host to control (windows|linux)
DOCKER_HOST_IP=""
DOCKER_HOST_HOSTNAME=""
DOCKER_HOST_USERNAME="nbrest"
DOCKER_HOST_OS="windows"
