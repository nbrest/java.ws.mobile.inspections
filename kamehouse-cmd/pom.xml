<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.nicobrest</groupId>
  <artifactId>kamehouse-cmd</artifactId>
  <packaging>jar</packaging>
  <version>4.00.1-SNAPSHOT</version>
  <name>KameHouse - Cmd</name>
  <url>https://www.nicobrest.com</url>

  <properties>
    <!-- Updated versions on 2016/02/05 -->

    <assembly.plugin.version>3.0.0</assembly.plugin.version>
    <checkstyle.version>2.17</checkstyle.version>
    <codehaus.jackson.version>1.9.13</codehaus.jackson.version>
    <commons.lang.version>2.6</commons.lang.version>
    <compiler.plugin.version>3.5</compiler.plugin.version>
    <dependency.plugin.version>2.10</dependency.plugin.version>
    <findbugs.version>3.0.1</findbugs.version>
    <hamcrest.version>1.3</hamcrest.version>
    <hibernate.version>5.1.0.Final</hibernate.version>
    <hibernate.jpa.version>1.0.0.Final</hibernate.jpa.version>
    <hsql.version>2.3.2</hsql.version>
    <jackson.version>2.4.3</jackson.version>
    <jar.plugin.version>3.0.2</jar.plugin.version>
    <jcloverslf4j.version>1.7.13</jcloverslf4j.version>
    <jsonpath.version>0.8.1</jsonpath.version>
    <junit.version>4.12</junit.version>
    <logback.version>1.1.2</logback.version>
    <mockito.version>1.9.5</mockito.version>
    <mysql.connector.java.version>5.1.39</mysql.connector.java.version>
    <oracle.ojdbc.version>11.2.0.4</oracle.ojdbc.version>
    <resources.plugin.version>3.0.2</resources.plugin.version>
    <spring.version>4.2.4.RELEASE</spring.version>

    <java.target.version>1.7</java.target.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <dependencies>

    <dependency>
        <groupId>javax.xml.bind</groupId>
        <artifactId>jaxb-api</artifactId>
        <version>2.2.8</version>
    </dependency>

    <!-- Apache -->
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>${commons.lang.version}</version>
    </dependency>

    <!-- Hibernate/JPA dependencies -->
    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-core</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-entitymanager</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <dependency>
      <groupId>org.hibernate.javax.persistence</groupId>
      <artifactId>hibernate-jpa-2.1-api</artifactId>
      <version>${hibernate.jpa.version}</version>
    </dependency>

    <dependency>
      <!-- Hibernate c3p0 connection pool -->
      <groupId>org.hibernate</groupId>
      <artifactId>hibernate-c3p0</artifactId>
      <version>${hibernate.version}</version>
    </dependency>

    <!-- HSQL InMemory database -->
    <dependency>
      <groupId>org.hsqldb</groupId>
      <artifactId>hsqldb</artifactId>
      <version>${hsql.version}</version>
    </dependency>

    <!-- MySql database driver -->
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <version>${mysql.connector.java.version}</version>
    </dependency>

    <!-- Oracle database driver -->
    <dependency>
      <groupId>com.oracle</groupId>
      <artifactId>ojdbc6</artifactId>
      <version>${oracle.ojdbc.version}</version>
    </dependency>

    <!-- Spring dependencies -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-orm</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <!-- Jackson dependencies for mapping Objects to Json -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- Logging dependencies -->
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${jcloverslf4j.version}</version>
    </dependency>

    <!-- Testing dependencies -->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.hamcrest</groupId>
          <artifactId>hamcrest-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <!-- Spring test -->
      <groupId>org.springframework</groupId>
      <artifactId>spring-test</artifactId>
      <version>${spring.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path</artifactId>
      <version>${jsonpath.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>com.jayway.jsonpath</groupId>
      <artifactId>json-path-assert</artifactId>
      <version>${jsonpath.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- maven compiler plugin: Compiler configurations for maven -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler.plugin.version}</version>
        <configuration>
          <!-- Removes compiler warnings about java version in eclipse -->
          <source>${java.target.version}</source>
          <target>${java.target.version}</target>
          <!-- Removes warning: Using platform encoding (Cp1252 actually) -->
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <!-- maven dependency plugin: Extract dependencies to the ./lib/ target folder -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>${dependency.plugin.version}</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>copy-dependencies</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/lib</outputDirectory>
              <overWriteReleases>false</overWriteReleases>
              <overWriteSnapshots>false</overWriteSnapshots>
              <overWriteIfNewer>true</overWriteIfNewer>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- findbugs: Detect bugs at compilation time and generate a report -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${findbugs.version}</version>
        <configuration>
          <!-- Enables analysis which takes more memory but finds more bugs. If you
            run out of memory, changes the value of the effort element to 'Low'. -->
          <effort>Max</effort>
          <!-- Reports all bugs (other values are medium and max) -->
          <threshold>Low</threshold>
          <!-- Produces XML report -->
          <xmlOutput>true</xmlOutput>
          <!-- Configures the directory in which the XML report is created -->
          <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
        </configuration>
		    <executions>
          <!-- Ensures that FindBugs inspects source code when project is compiled. -->
		        <execution>
            <id>findbugs</id>
            <phase>compile</phase>
		            <goals>
              <goal>check</goal>
		            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- maven jar plugin: Create the executable jar with the manifest file and
        main class -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>${jar.plugin.version}</version>
		            <configuration>
		                <archive>
		                    <manifest>
		                        <addClasspath>true</addClasspath>
              <classpathPrefix></classpathPrefix>
              <mainClass>com.nicobrest.cmd.config.MainApp</mainClass>
		                    </manifest>
            <manifestEntries>
              <Class-Path>.</Class-Path>
            </manifestEntries>
		                </archive>
		            </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${assembly.plugin.version}</version>
        <configuration>
          <finalName>${project.artifactId}</finalName>
          <descriptors>
            <descriptor>src/main/assembly/descriptor.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
		        </execution>
		    </executions>
      </plugin>
      
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${resources.plugin.version}</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/conf</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources/conf</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>

    <!-- Enable resource filtering based on profiles -->
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
    </resources>
  </build>

  <!-- Profile definitions -->
  <profiles>
    <!-- Default profile -->
    <profile>
      <id>prod</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <filters>
          <filter>src/main/filters/prod/hibernate.properties</filter>
          <filter>src/main/filters/prod/jdbc.properties</filter>
        </filters>
      </build>
    </profile>

    <profile>
      <id>qa</id>
      <build>
        <filters>
          <filter>src/main/filters/qa/hibernate.properties</filter>
          <filter>src/main/filters/qa/jdbc.properties</filter>
        </filters>
      </build>
    </profile>

    <profile>
      <id>dev</id>
      <build>
        <filters>
          <filter>src/main/filters/dev/hibernate.properties</filter>
          <filter>src/main/filters/dev/jdbc.properties</filter>
        </filters>
      </build>
    </profile>
  </profiles>
</project>
